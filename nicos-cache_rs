#!/usr/bin/env python

import sys
from os import path
sys.path.insert(0, path.dirname(path.dirname(path.realpath(__file__))))

import os
import optparse
from nicos import config, session
from nicos.core import NicosError
from nicos.core.sessions.setups import readSetups

parser = optparse.OptionParser()
parser.add_option('-d', '--daemon', dest='daemon', action='store_true',
                  help='daemonize the cache process')
parser.add_option('-S', '--setup', action='store', dest='setupname',
                  default='cache',
                  help="name of the setup, default is 'cache'")
parser.add_option('--clear', dest='clear', action='store_true',
                  default=False,
                  help='clear the whole cache')
opts, args = parser.parse_args()


setup_paths = [path.join(config.custom_path, p.strip(), 'setups')
               for p in config.setup_subdirs.split(',')]
setups = readSetups(setup_paths, session.log)

srvconfig = setups[opts.setupname]['devices']['Server']
if not srvconfig[0].endswith('.CacheServer'):
    raise NicosError('no CacheServer device found')

dbconfig = setups[opts.setupname]['devices'][srvconfig[1]['db']]
if not dbconfig[0].endswith('.FlatfileCacheDatabase'):
    raise NicosError('only FlatfileCacheDatabase setups are supported')

hostport = srvconfig[1].get('server', '127.0.0.1:14869')
hostport = hostport.replace('localhost', '127.0.0.1')
if ':' not in hostport:
    hostport += ':14869'

args = ['cache-rs',
        '--bind', hostport,
        '--store', dbconfig[1]['storepath'],
        '--log', config.logging_path + '/cache_rs',
        '--pid', config.pid_path]
if srvconfig[1].get('loglevel', 'info') == 'debug':
    args.append('-v')
if opts.daemon:
    args.append('-d')
    if config.user:
        args.extend(['--user', config.user])
    if config.group:
        args.extend(['--group', config.group])
if opts.clear:
    args.append('--clear')

os.execvp('cache-rs', args)
